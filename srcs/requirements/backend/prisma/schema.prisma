generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  receivedRequests FriendshipRequest[] @relation("received")
  sentRequests     FriendshipRequest[] @relation("sent")
  friends          User[]              @relation("friends")
  FriendRelation   User[]              @relation("friends")
  memberIn         Room[]              @relation("member")

  blockedUsers         User[] @relation("blocked")
  blockedUsersrelation User[] @relation("blocked")

  blockingUsers         User[] @relation("block")
  blockingUsersrelation User[] @relation("block")
}

model FriendshipRequest {
  id         Int                     @id @default(autoincrement())
  senderId   Int
  receiverId Int
  status     FriendshipRequestStatus
  createdAt  DateTime                @default(now())
  receiver   User                    @relation("received", fields: [receiverId], references: [id])
  sender     User                    @relation("sent", fields: [senderId], references: [id])
}

model Room {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  type      RoomType
  password  String?
  ownerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members        User[]           @relation("member")
  messages       Message[]
  RoomMembership RoomMembership[]
}

model RoomMembership {
  userId    Int      @id
  roomId    Int
  role      RoomRole
  createdAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  senderId  Int
  roomId    Int
  createdAt DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id])
}

model DirectMessage {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  createdAt  DateTime @default(now())
}

enum RoomType {
  PUBLIC
  PRIVATE
  PASSWORD_PROTECTED
}

enum RoomRole {
  OWNER
  ADMIN
  MEMBER
}

enum FriendshipRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}
